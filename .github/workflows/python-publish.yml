# 当创建发布版本时，此工作流将上传 Python 包到 PyPI
# 更多信息请参见: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# 此工作流使用的操作未经 GitHub 认证
# 它们由第三方提供，受单独的服务条款、隐私政策和支持文档约束

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          # 注意: 在此处放置您自己的分发构建步骤
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # 重要: 此权限对于可信发布是必需的
      id-token: write

    # 强烈建议使用具有发布保护功能的专用环境
    # 更多信息请参见: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # 可选: 取消注释并更新以在部署状态中包含您的 PyPI 项目 URL:
      # url: https://pypi.org/p/YOURPROJECT
      #
      # 替代方案: 如果您的 GitHub Release 名称恰好是 PyPI 项目版本字符串
      # 替代方案: 请取消注释以下行:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
